name: Deploy Laravel with Docker

on:
  push:
    branches:
      - staging
      - main

env:
  PROJECT_ROOT: /home/rizal/actions-runner/_work/project-pc24/project-pc24

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Fix permission before checkout
        run: |
          sudo chown -R $USER:$USER $PROJECT_ROOT || true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker/staging/docker-compose.staging.yml" >> $GITHUB_ENV
            echo "APP_CONTAINER=app-staging" >> $GITHUB_ENV
            echo "DB_CONTAINER=db-staging" >> $GITHUB_ENV
            echo "VOLUME_APP_CODE=app-code-staging" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "COMPOSE_FILE=docker/production/docker-compose.production.yml" >> $GITHUB_ENV
            echo "APP_CONTAINER=app-production" >> $GITHUB_ENV
            echo "DB_CONTAINER=db-production" >> $GITHUB_ENV
            echo "VOLUME_APP_CODE=app-code-production" >> $GITHUB_ENV
          fi

      - name: Stop old containers
        run: docker compose -f $COMPOSE_FILE down || true

      - name: Remove app-code volume (code only, keep storage!)
        run: docker volume rm $VOLUME_APP_CODE || true

      - name: Build & start containers
        run: docker compose -f $COMPOSE_FILE up -d --build --force-recreate

      - name: Copy updated Laravel app code
        run: docker cp . $APP_CONTAINER:/var/www

      - name: Re-link Laravel storage
        run: |
          docker exec $APP_CONTAINER bash -c "\
            rm -f public/storage && php artisan storage:link"

      - name: Set correct permissions inside container
        run: |
          docker exec $APP_CONTAINER bash -c "\
            mkdir -p storage bootstrap/cache && \
            chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache && \
            chmod -R 775 /var/www/storage /var/www/bootstrap/cache"

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            docker exec $DB_CONTAINER mysqladmin ping -h 127.0.0.1 -prizal8 && break
            echo "‚è≥ Waiting for MySQL ($i)..."
            sleep 2
          done

      - name: Laravel setup (composer, artisan)
        run: |
          docker exec $APP_CONTAINER composer install --no-interaction --prefer-dist
          docker exec $APP_CONTAINER php artisan key:generate
          docker exec $APP_CONTAINER php artisan migrate --force
          docker exec $APP_CONTAINER php artisan config:cache

      - name: Build frontend with npm
        run: |
          docker exec $APP_CONTAINER bash -c "\
            cd /var/www && \
            npm install && \
            npm run build"

      - name: Fix final permission on host
        run: |
          sudo chown -R $USER:$USER $PROJECT_ROOT || true
